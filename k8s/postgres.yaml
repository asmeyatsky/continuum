apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: continuum
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: continuum
data:
  init.sql: |
    -- Create extensions
    CREATE EXTENSION IF NOT EXISTS pg_trgm;
    CREATE EXTENSION IF NOT EXISTS uuid-ossp;

    -- Initialize application database
    -- Tables will be created by SQLAlchemy on first run

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: continuum
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
              name: postgres

          environment:
            - name: POSTGRES_DB
              value: continuum
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password

          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d

          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U continuum_user
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U continuum_user
            initialDelaySeconds: 10
            periodSeconds: 5

          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"

      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-scripts
          configMap:
            name: postgres-init

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: continuum
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: continuum
type: Opaque
stringData:
  username: continuum_user
  password: continuum_password_change_me
